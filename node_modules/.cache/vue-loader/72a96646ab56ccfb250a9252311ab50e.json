{"remainingRequest":"/var/www/html/avomac-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/avomac-dashboard/src/views/AddDelivery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/avomac-dashboard/src/views/AddDelivery.vue","mtime":1650352725027},{"path":"/var/www/html/avomac-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1634170450872},{"path":"/var/www/html/avomac-dashboard/node_modules/babel-loader/lib/index.js","mtime":1650205918695},{"path":"/var/www/html/avomac-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1634170450872},{"path":"/var/www/html/avomac-dashboard/node_modules/vue-loader/lib/index.js","mtime":1634170451793}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n      valid: true,\n      name: '',\n      nameRules: [\n        v => !!v || 'Name is required',\n        v => (v && v.length <= 10) || 'Name must be less than 10 characters',\n      ],\n      items: [],\n      supplier:'',\n      source:'',\n      amount:'',\n      price:'',\n      comments:'',\n      created_at: new Date().toLocaleString(),\n      requiredRules: [v => !!v || 'This input is required'],\n    }),\n\n    mounted() {\n      var requestOptions = {\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          Accept: \"application/json\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n      };\n\n      fetch(process.env.VUE_APP_STAGING_ENDPOINT + \"suppliers-name\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n          console.log(result)\n          this.items = result\n          })\n        .catch(error => console.log('error', error));\n\n    },\n\n    methods: {\n      add_delivery() {\n\n        var data = { supplier: this.supplier, source: this.source, amount: this.amount, price:this.price, comments:this.comments, created_at: this.created_at }\n        console.log(data)\n\n        var requestOptions = {\n          method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n          mode: \"cors\", // no-cors, cors, *same-origin\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: \"same-origin\", // include, *same-origin, omit\n          headers: {\n            Accept: \"application/json\",\n          },\n          redirect: \"follow\", // manual, *follow, error\n          referrer: \"no-referrer\", // no-referrer, *client\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        };\n\n        fetch(process.env.VUE_APP_STAGING_ENDPOINT + \"create-delivery\", requestOptions)\n          .then(response => response.json())\n          .then(r => {\n            if (r.status == '200') {\n\n              this.$store.commit('delivery')  \n              this.$router.push('/delivery')\n              this.$refs.form.reset()\n              this.supplier = \"\"\n              this.source = \"\"\n              this.amount = \"\"\n              this.price = \"\"\n              this.comments  = \"\"\n              this.created_at\n              \n            } else {\n              alert(\"Error, Kindly contact developer\")\n              this.$router.push('/delivery')\n              this.$store.commit('delivery')\n            }\n            \n            })\n          .catch(error => console.log('error', error));\n\n      }\n    }\n}\n",{"version":3,"sources":["AddDelivery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"AddDelivery.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container\n    fill-height\n    fluid\n    grid-list-xl>\n    <v-layout\n      justify-center\n      wrap\n    >\n      <v-flex\n        xs12\n      >\n        <material-card\n          color=\"green\"\n          title=\"Add New Delivery\"\n          text=\"Complete the form with the new delivery details\"\n        >\n          <v-form>\n            <v-container py-0>\n              <v-layout wrap>\n                <v-flex\n                  xs12\n                  md6\n                >\n                <v-select\n                    v-model=\"supplier\"\n                    :items=\"items\"\n                    item-text=\"company\"\n                    item-value=\"id\"\n                    :rules=\"[v => !!v || 'Supplier name is required']\"\n                    label=\"Select Supplier\"\n                    required\n                    ></v-select>\n                </v-flex>\n                <v-flex\n                  xs12\n                  md6\n                >\n                  <v-text-field\n                    v-model=\"source\"\n                    class=\"purple-input\"\n                    label=\"Source\"\n                  />\n                </v-flex>\n                <v-flex\n                  xs12\n                  md4\n                >\n                  <v-text-field\n                    v-model=\"amount\"\n                    label=\"Amount in Kilograms\"\n                    class=\"purple-input\"\n                    :rules=\"requiredRules\"/>\n                </v-flex>\n                <v-flex\n                  xs12\n                  md4\n                >\n                  <v-text-field\n                    v-model=\"price\"\n                    label=\"Price\"\n                    class=\"purple-input\"\n                    :rules=\"requiredRules\"/>\n                </v-flex>\n                <v-flex\n                  xs12\n                  md4\n                >\n                  <v-text-field\n                    v-model=\"created_at\"\n                    label=\"Date - Time of Delivery\"\n                    class=\"purple-input\"/>\n                </v-flex>\n                <v-flex xs12>\n                  <v-textarea\n                    v-model=\"comments\"\n                    class=\"purple-input\"\n                    label=\"Delivery Notes\"\n                  />\n                </v-flex>\n                <v-flex\n                  xs12\n                  text-xs-right\n                >\n                  <v-btn\n                    class=\"mx-0 font-weight-light\"\n                    color=\"success\"\n                    @click=\"add_delivery\"\n                  >\n                    Add New Delivery\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n            </v-container>\n          </v-form>\n        </material-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n      valid: true,\n      name: '',\n      nameRules: [\n        v => !!v || 'Name is required',\n        v => (v && v.length <= 10) || 'Name must be less than 10 characters',\n      ],\n      items: [],\n      supplier:'',\n      source:'',\n      amount:'',\n      price:'',\n      comments:'',\n      created_at: new Date().toLocaleString(),\n      requiredRules: [v => !!v || 'This input is required'],\n    }),\n\n    mounted() {\n      var requestOptions = {\n        method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          Accept: \"application/json\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        // body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n      };\n\n      fetch(process.env.VUE_APP_STAGING_ENDPOINT + \"suppliers-name\", requestOptions)\n        .then(response => response.json())\n        .then(result => {\n          console.log(result)\n          this.items = result\n          })\n        .catch(error => console.log('error', error));\n\n    },\n\n    methods: {\n      add_delivery() {\n\n        var data = { supplier: this.supplier, source: this.source, amount: this.amount, price:this.price, comments:this.comments, created_at: this.created_at }\n        console.log(data)\n\n        var requestOptions = {\n          method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n          mode: \"cors\", // no-cors, cors, *same-origin\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: \"same-origin\", // include, *same-origin, omit\n          headers: {\n            Accept: \"application/json\",\n          },\n          redirect: \"follow\", // manual, *follow, error\n          referrer: \"no-referrer\", // no-referrer, *client\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        };\n\n        fetch(process.env.VUE_APP_STAGING_ENDPOINT + \"create-delivery\", requestOptions)\n          .then(response => response.json())\n          .then(r => {\n            if (r.status == '200') {\n\n              this.$store.commit('delivery')  \n              this.$router.push('/delivery')\n              this.$refs.form.reset()\n              this.supplier = \"\"\n              this.source = \"\"\n              this.amount = \"\"\n              this.price = \"\"\n              this.comments  = \"\"\n              this.created_at\n              \n            } else {\n              alert(\"Error, Kindly contact developer\")\n              this.$router.push('/delivery')\n              this.$store.commit('delivery')\n            }\n            \n            })\n          .catch(error => console.log('error', error));\n\n      }\n    }\n}\n</script>\n"]}]}